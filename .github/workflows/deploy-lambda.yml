name: Deploy Lambda Function with Terraform

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
permissions:
  id-token: write   # Permite solicitar o JWT do GitHub para autenticação com a AWS
  contents: read    # Necessário para actions/checkout

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create Lambda ZIP
        run: |
          zip -r lambda.zip . # Cria o arquivo zip da lambda
          
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::975050139769:role/role-para-criacao-role-pode-ser-apagada
          aws-region: sa-east-1
          audience: sts.amazonaws.com

      - name: Install Terraform
        run: |
          wget https://releases.hashicorp.com/terraform/1.6.0/terraform_1.6.0_linux_amd64.zip || { echo "Failed to download Terraform"; exit 1; }
          sudo apt-get install unzip -y || { echo "Failed to install unzip"; exit 1; }
          unzip terraform_1.6.0_linux_amd64.zip || { echo "Failed to unzip Terraform"; exit 1; }
          sudo mv terraform /usr/local/bin/ || { echo "Failed to move Terraform binary"; exit 1; }

      - name: Initialize Terraform
        run: terraform init

      - name: Format and Validate Terraform
        run: |
          terraform fmt -check
          terraform validate

      - name: Plan Terraform Deployment
        run: terraform plan -out=tfplan

      - name: Apply Terraform Deployment
        run: terraform apply -auto-approve tfplan
